{"version":3,"sources":["components/header.js","components/footer.js","components/task.js","App.js","data/markdown/app_background.js","index.js"],"names":["Header","className","to","Footer","Date","getFullYear","Task","name","ListGroup","Item","Button","variant","App","useState","currTask","setCurrTask","tasks","setTasks","id","source","Form","Group","controlId","FormControl","placeholder","onChange","event","preventDefault","target","value","console","log","InputGroup","Append","onClick","map","task","Index","path","component","ReactDOM","render","document","getElementById"],"mappings":"2LAeeA,EAZA,kBACb,wBAAQC,UAAU,WAAlB,SACE,8BACE,8BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,oBAAID,UAAU,aAAd,6BCEKE,EARA,WACb,OACE,qBAAKF,UAAU,SAAf,SACE,4CAAW,IAAIG,MAAOC,cAAtB,sB,iBCeSC,EAjBF,SAACC,GAEZ,OACE,8BAIE,cAACC,EAAA,EAAD,UACE,eAACA,EAAA,EAAUC,KAAX,WAAiBF,EACjB,qBAAKN,UAAU,6BAAf,SACE,cAACS,EAAA,EAAD,CAAQC,QAAQ,iBAAhB,gC,yDCmEKC,EA7DH,WAAM,MAEgBC,mBAAS,IAFzB,mBAETC,EAFS,KAECC,EAFD,OAGUF,mBAAS,IAHnB,mBAGTG,EAHS,KAGFC,EAHE,KAiChB,OACE,qBAAKhB,UAAU,OAAf,SACE,sBAAKiB,GAAG,UAAR,UACE,cAAC,IAAD,CAAeC,OCvDH,wFDwDZ,cAACC,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,aAAtB,UAME,cAACC,EAAA,EAAD,CAAaC,YAAa,eAAgBC,SA/BhC,SAACC,GACnBA,EAAMC,iBAENZ,EAAYW,EAAME,OAAOC,OACzBC,QAAQC,IAAI,CAACjB,gBA4BL,cAACkB,EAAA,EAAWC,OAAZ,UAKE,cAACvB,EAAA,EAAD,CAAQwB,QAAS,WArB3BjB,EAAS,GAAD,mBAAKD,GAAL,CAAYF,KACpBgB,QAAQC,IAAI,CAACf,WAoBH,8BAKLA,EAAMmB,KAAI,SAACC,GAAW,OAAQ,cAAC,EAAD,CAAM7B,KAAM6B,aEhE7CC,G,cAAQ,kBACZ,qBAAKpC,UAAU,OAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,8BACE,cAAC,IAAD,CAAOqC,KAAK,IAAIC,UAAW3B,MAE7B,cAAC,EAAD,WAKN4B,IAASC,OAAO,cAAC,EAAD,IAAWC,SAASC,eAAe,W","file":"static/js/main.7f9233d1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => (\r\n  <header className=\"masthead\">\r\n    <div>\r\n      <div>\r\n        <Link to=\"/\">\r\n          <h1 className=\"site-title\">To Do!</h1>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <footer>Â© {new Date().getFullYear()} - Shriya M. </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport { Alert, Button, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\n\r\nconst Task = (name) => {\r\n\r\n  return (\r\n    <div>\r\n      {/**\r\n       * TODO: add an html or bootstrap element that uses the name variable to display an individual task\r\n       */}\r\n      <ListGroup>\r\n        <ListGroup.Item>{name}\r\n        <div className=\"d-flex justify-content-end\">\r\n          <Button variant=\"outline-danger\">Complete</Button></div>\r\n          </ListGroup.Item>\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;","import { useState } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { app_background } from \"./data/markdown\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { Task } from \"./components\";\r\n\r\n/**\r\n * TODO:\r\n * 1. Complete all the instructions here in App.js\r\n * 2. Complete all the instructions in the task.js file (also change the footer to your name)\r\n * 3. Delete these comments & feel free to play around with bootstrap!\r\n * 4. Optional Challenge: Add buttons to delete tasks!\r\n */\r\n\r\nconst App = () => {\r\n  // I've already added currTask for you as an example of useState!\r\n  const [currTask, setCurrTask] = useState(\"\");\r\n  const [tasks, setTasks] = useState([]);\r\n  // follow this example above & with the useState hook, create a variable called tasks. its default value is an empty array []\r\n\r\n  /**\r\n   * TODO: create a regular function called handleInput that takes in a parameter called event & updates currTask\r\n   * using setCurrTask\r\n   * Hint: event is an object in JavaScript that contains a bunch of information about the element that the user interacted with. In this case\r\n   * event belongs to the FormControl element, which is where the task is being inputed. We want to find where in the event object, the string\r\n   * value entered by the user is being stored. In this case, it's stored here: event.target.value\r\n   */\r\n  const handleInput = (event) => {\r\n    event.preventDefault(); // this prevents the page from refreshing when the button is clicked\r\n    // TODO: call setCurrTask and pass it the string the user inputed\r\n    setCurrTask(event.target.value);\r\n    console.log({currTask});\r\n  };\r\n\r\n  /**\r\n   * TODO: create an arrow function called addTask that adds currTask to the tasks array\r\n   * Hint: in javascript, you can easily add to an array using the spread (...) operator. This takes\r\n   * everything in the array and adds the newest element to it\r\n   * Example: const old_array = [\"hi\", \"bye\"]\r\n   *          const new_array = [...old_array, \"wow\"] (we're adding the string \"wow\")\r\n   *          console.log(new_array) -> [\"hi\", \"bye\", \"wow\"]\r\n   */\r\n  const addTask = () => {\r\n    setTasks([...tasks, currTask]);\r\n    console.log({tasks});\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div id=\"content\">\r\n        <ReactMarkdown source={app_background} />\r\n        <Form>\r\n          <Form.Group controlId=\"form-input\"> \r\n            {/* *\r\n             * TODO: pass 2 props to the FormControl element\r\n             * 1. placeholder (string) -> pass a string explaining what the input is for (ex: \"Enter a task!\")\r\n             * 2. onChange (function) -> pass one of the functions above that handles the user's input\r\n             */}\r\n            <FormControl placeholder={\"Enter a Task\"} onChange={handleInput} />\r\n            <InputGroup.Append>\r\n              {/** TODO: Add a prop & add some text to the button\r\n               * 1. onClick (function) -> pass one of the functions above that handles a task being added\r\n               * 2. Add text between the open and closing button tags, describing what the button should say\r\n               */}\r\n              <Button onClick={() => {addTask()}} > Click Me</Button>\r\n            </InputGroup.Append>\r\n          </Form.Group>\r\n        </Form>\r\n        {/*using your tasks array, map through it and pass each task string to the Task component via the name prop*/}\r\n        {tasks.map((task) => { return  <Task name={task}/> })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const app_background = `##### An app allowing you to sort your life. \r\n###### Built with React & Bootstrap!`;\r\n\r\nexport default app_background;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nimport { Header, Footer } from \"./components\";\r\nimport App from \"./App\";\r\n\r\nimport \"./index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Index = () => (\r\n  <div className=\"main\">\r\n    <BrowserRouter>\r\n      <Header />\r\n      <div>\r\n        <Route path=\"/\" component={App} />\r\n      </div>\r\n      <Footer />\r\n    </BrowserRouter>\r\n  </div>\r\n);\r\n\r\nReactDOM.render(<Index />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}